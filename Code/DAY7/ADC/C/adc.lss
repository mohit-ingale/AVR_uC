
adc.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000040e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  0000040e  00000482  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800064  00000412  00000486  2**0
                  ALLOC
  3 .stab         00000798  00000000  00000000  00000488  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000700  00000000  00000000  00000c20  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	26 c0       	rjmp	.+76     	; 0x5e <__vector_8>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ee e0       	ldi	r30, 0x0E	; 14
  3a:	f4 e0       	ldi	r31, 0x04	; 4
  3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
  42:	a4 36       	cpi	r26, 0x64	; 100
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>

00000048 <__do_clear_bss>:
  48:	10 e0       	ldi	r17, 0x00	; 0
  4a:	a4 e6       	ldi	r26, 0x64	; 100
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a6 36       	cpi	r26, 0x66	; 102
  54:	b1 07       	cpc	r27, r17
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	16 d0       	rcall	.+44     	; 0x86 <main>
  5a:	d7 c1       	rjmp	.+942    	; 0x40a <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <__vector_8>:
void lcd_init(void);
void lcd_cmd(unsigned char);
void lcd_data(unsigned char);

ISR(TIMER1_OVF_vect)
{
  5e:	1f 92       	push	r1
  60:	0f 92       	push	r0
  62:	0f b6       	in	r0, 0x3f	; 63
  64:	0f 92       	push	r0
  66:	11 24       	eor	r1, r1
  68:	df 93       	push	r29
  6a:	cf 93       	push	r28
  6c:	cd b7       	in	r28, 0x3d	; 61
  6e:	de b7       	in	r29, 0x3e	; 62
	n=0;
  70:	10 92 65 00 	sts	0x0065, r1
  74:	10 92 64 00 	sts	0x0064, r1
}
  78:	cf 91       	pop	r28
  7a:	df 91       	pop	r29
  7c:	0f 90       	pop	r0
  7e:	0f be       	out	0x3f, r0	; 63
  80:	0f 90       	pop	r0
  82:	1f 90       	pop	r1
  84:	18 95       	reti

00000086 <main>:


int main(void)
{
  86:	df 93       	push	r29
  88:	cf 93       	push	r28
  8a:	cd b7       	in	r28, 0x3d	; 61
  8c:	de b7       	in	r29, 0x3e	; 62
  8e:	28 97       	sbiw	r28, 0x08	; 8
  90:	0f b6       	in	r0, 0x3f	; 63
  92:	f8 94       	cli
  94:	de bf       	out	0x3e, r29	; 62
  96:	0f be       	out	0x3f, r0	; 63
  98:	cd bf       	out	0x3d, r28	; 61
	int i,j,k,pos;
	
	DDRD=0XFF;
  9a:	e1 e3       	ldi	r30, 0x31	; 49
  9c:	f0 e0       	ldi	r31, 0x00	; 0
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	80 83       	st	Z, r24
	DDRB=0XFF;
  a2:	e7 e3       	ldi	r30, 0x37	; 55
  a4:	f0 e0       	ldi	r31, 0x00	; 0
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	80 83       	st	Z, r24
	PORTB|=(1<<PB1);
  aa:	a8 e3       	ldi	r26, 0x38	; 56
  ac:	b0 e0       	ldi	r27, 0x00	; 0
  ae:	e8 e3       	ldi	r30, 0x38	; 56
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	80 81       	ld	r24, Z
  b4:	82 60       	ori	r24, 0x02	; 2
  b6:	8c 93       	st	X, r24
	TIMSK|=(1<<TOIE1);
  b8:	a9 e5       	ldi	r26, 0x59	; 89
  ba:	b0 e0       	ldi	r27, 0x00	; 0
  bc:	e9 e5       	ldi	r30, 0x59	; 89
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	84 60       	ori	r24, 0x04	; 4
  c4:	8c 93       	st	X, r24
	DDRC&=~(1<<PC1);
  c6:	a4 e3       	ldi	r26, 0x34	; 52
  c8:	b0 e0       	ldi	r27, 0x00	; 0
  ca:	e4 e3       	ldi	r30, 0x34	; 52
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	80 81       	ld	r24, Z
  d0:	8d 7f       	andi	r24, 0xFD	; 253
  d2:	8c 93       	st	X, r24
	PORTC|=(1<<PC1);
  d4:	a5 e3       	ldi	r26, 0x35	; 53
  d6:	b0 e0       	ldi	r27, 0x00	; 0
  d8:	e5 e3       	ldi	r30, 0x35	; 53
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 81       	ld	r24, Z
  de:	82 60       	ori	r24, 0x02	; 2
  e0:	8c 93       	st	X, r24
	ADCSRA=(1<<ADEN)|(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
  e2:	e6 e2       	ldi	r30, 0x26	; 38
  e4:	f0 e0       	ldi	r31, 0x00	; 0
  e6:	87 e8       	ldi	r24, 0x87	; 135
  e8:	80 83       	st	Z, r24
	ADMUX=(1<<REFS0)|(1<<MUX0);
  ea:	e7 e2       	ldi	r30, 0x27	; 39
  ec:	f0 e0       	ldi	r31, 0x00	; 0
  ee:	81 e4       	ldi	r24, 0x41	; 65
  f0:	80 83       	st	Z, r24
	sei();
  f2:	78 94       	sei
	lcd_init();
  f4:	70 d0       	rcall	.+224    	; 0x1d6 <lcd_init>
	lcd_string("hi");
  f6:	80 e6       	ldi	r24, 0x60	; 96
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	84 d0       	rcall	.+264    	; 0x204 <lcd_string>
	while(1)
	{
	ADCSRA|=(1<<ADSC);
  fc:	a6 e2       	ldi	r26, 0x26	; 38
  fe:	b0 e0       	ldi	r27, 0x00	; 0
 100:	e6 e2       	ldi	r30, 0x26	; 38
 102:	f0 e0       	ldi	r31, 0x00	; 0
 104:	80 81       	ld	r24, Z
 106:	80 64       	ori	r24, 0x40	; 64
 108:	8c 93       	st	X, r24
	while((ADCSRA&(1<<ADIF))==0);
 10a:	e6 e2       	ldi	r30, 0x26	; 38
 10c:	f0 e0       	ldi	r31, 0x00	; 0
 10e:	80 81       	ld	r24, Z
 110:	88 2f       	mov	r24, r24
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	80 71       	andi	r24, 0x10	; 16
 116:	90 70       	andi	r25, 0x00	; 0
 118:	00 97       	sbiw	r24, 0x00	; 0
 11a:	b9 f3       	breq	.-18     	; 0x10a <main+0x84>
	i=ADCL;
 11c:	e4 e2       	ldi	r30, 0x24	; 36
 11e:	f0 e0       	ldi	r31, 0x00	; 0
 120:	80 81       	ld	r24, Z
 122:	88 2f       	mov	r24, r24
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	98 87       	std	Y+8, r25	; 0x08
 128:	8f 83       	std	Y+7, r24	; 0x07
	j=ADCH;
 12a:	e5 e2       	ldi	r30, 0x25	; 37
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	80 81       	ld	r24, Z
 130:	88 2f       	mov	r24, r24
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	9e 83       	std	Y+6, r25	; 0x06
 136:	8d 83       	std	Y+5, r24	; 0x05
	ADCSRA&=~(1<<ADIF);
 138:	a6 e2       	ldi	r26, 0x26	; 38
 13a:	b0 e0       	ldi	r27, 0x00	; 0
 13c:	e6 e2       	ldi	r30, 0x26	; 38
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	80 81       	ld	r24, Z
 142:	8f 7e       	andi	r24, 0xEF	; 239
 144:	8c 93       	st	X, r24
	j=j&0x03;
 146:	8d 81       	ldd	r24, Y+5	; 0x05
 148:	9e 81       	ldd	r25, Y+6	; 0x06
 14a:	83 70       	andi	r24, 0x03	; 3
 14c:	90 70       	andi	r25, 0x00	; 0
 14e:	9e 83       	std	Y+6, r25	; 0x06
 150:	8d 83       	std	Y+5, r24	; 0x05
	//lcd_string("value converted");
	i=(i&0xff)|(j<<8);
 152:	8f 81       	ldd	r24, Y+7	; 0x07
 154:	98 85       	ldd	r25, Y+8	; 0x08
 156:	9c 01       	movw	r18, r24
 158:	30 70       	andi	r19, 0x00	; 0
 15a:	8d 81       	ldd	r24, Y+5	; 0x05
 15c:	9e 81       	ldd	r25, Y+6	; 0x06
 15e:	98 2f       	mov	r25, r24
 160:	88 27       	eor	r24, r24
 162:	82 2b       	or	r24, r18
 164:	93 2b       	or	r25, r19
 166:	98 87       	std	Y+8, r25	; 0x08
 168:	8f 83       	std	Y+7, r24	; 0x07
	
		lcd_cmd(0x01);
 16a:	81 e0       	ldi	r24, 0x01	; 1
 16c:	66 d0       	rcall	.+204    	; 0x23a <lcd_cmd>
		delay(2);
 16e:	82 e0       	ldi	r24, 0x02	; 2
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	eb d0       	rcall	.+470    	; 0x34a <delay>
	   pos=0x82;	
 174:	82 e8       	ldi	r24, 0x82	; 130
 176:	90 e0       	ldi	r25, 0x00	; 0
 178:	9a 83       	std	Y+2, r25	; 0x02
 17a:	89 83       	std	Y+1, r24	; 0x01
		//	delay(200);
		for(k=0;k<3;k++)
 17c:	1c 82       	std	Y+4, r1	; 0x04
 17e:	1b 82       	std	Y+3, r1	; 0x03
 180:	21 c0       	rjmp	.+66     	; 0x1c4 <main+0x13e>
		{
		   lcd_cmd(pos--);
 182:	29 81       	ldd	r18, Y+1	; 0x01
 184:	89 81       	ldd	r24, Y+1	; 0x01
 186:	9a 81       	ldd	r25, Y+2	; 0x02
 188:	01 97       	sbiw	r24, 0x01	; 1
 18a:	9a 83       	std	Y+2, r25	; 0x02
 18c:	89 83       	std	Y+1, r24	; 0x01
 18e:	82 2f       	mov	r24, r18
 190:	54 d0       	rcall	.+168    	; 0x23a <lcd_cmd>
		   delay(4);
 192:	84 e0       	ldi	r24, 0x04	; 4
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	d9 d0       	rcall	.+434    	; 0x34a <delay>
			lcd_data((i%10+'0'));
 198:	8f 81       	ldd	r24, Y+7	; 0x07
 19a:	98 85       	ldd	r25, Y+8	; 0x08
 19c:	2a e0       	ldi	r18, 0x0A	; 10
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	b9 01       	movw	r22, r18
 1a2:	0c d1       	rcall	.+536    	; 0x3bc <__divmodhi4>
 1a4:	80 5d       	subi	r24, 0xD0	; 208
 1a6:	8d d0       	rcall	.+282    	; 0x2c2 <lcd_data>
			i=i/10;
 1a8:	8f 81       	ldd	r24, Y+7	; 0x07
 1aa:	98 85       	ldd	r25, Y+8	; 0x08
 1ac:	2a e0       	ldi	r18, 0x0A	; 10
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	b9 01       	movw	r22, r18
 1b2:	04 d1       	rcall	.+520    	; 0x3bc <__divmodhi4>
 1b4:	cb 01       	movw	r24, r22
 1b6:	98 87       	std	Y+8, r25	; 0x08
 1b8:	8f 83       	std	Y+7, r24	; 0x07
	
		lcd_cmd(0x01);
		delay(2);
	   pos=0x82;	
		//	delay(200);
		for(k=0;k<3;k++)
 1ba:	8b 81       	ldd	r24, Y+3	; 0x03
 1bc:	9c 81       	ldd	r25, Y+4	; 0x04
 1be:	01 96       	adiw	r24, 0x01	; 1
 1c0:	9c 83       	std	Y+4, r25	; 0x04
 1c2:	8b 83       	std	Y+3, r24	; 0x03
 1c4:	8b 81       	ldd	r24, Y+3	; 0x03
 1c6:	9c 81       	ldd	r25, Y+4	; 0x04
 1c8:	83 30       	cpi	r24, 0x03	; 3
 1ca:	91 05       	cpc	r25, r1
 1cc:	d4 f2       	brlt	.-76     	; 0x182 <main+0xfc>
		   lcd_cmd(pos--);
		   delay(4);
			lcd_data((i%10+'0'));
			i=i/10;
		}
		delay(1000);
 1ce:	88 ee       	ldi	r24, 0xE8	; 232
 1d0:	93 e0       	ldi	r25, 0x03	; 3
 1d2:	bb d0       	rcall	.+374    	; 0x34a <delay>
 1d4:	93 cf       	rjmp	.-218    	; 0xfc <main+0x76>

000001d6 <lcd_init>:




void lcd_init(void)
{
 1d6:	df 93       	push	r29
 1d8:	cf 93       	push	r28
 1da:	cd b7       	in	r28, 0x3d	; 61
 1dc:	de b7       	in	r29, 0x3e	; 62
	delay(16);
 1de:	80 e1       	ldi	r24, 0x10	; 16
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	b3 d0       	rcall	.+358    	; 0x34a <delay>
	lcd_cmd(0x33);
 1e4:	83 e3       	ldi	r24, 0x33	; 51
 1e6:	29 d0       	rcall	.+82     	; 0x23a <lcd_cmd>
	lcd_cmd(0x32);
 1e8:	82 e3       	ldi	r24, 0x32	; 50
 1ea:	27 d0       	rcall	.+78     	; 0x23a <lcd_cmd>
	lcd_cmd(0x28);
 1ec:	88 e2       	ldi	r24, 0x28	; 40
 1ee:	25 d0       	rcall	.+74     	; 0x23a <lcd_cmd>
	lcd_cmd(0x01);
 1f0:	81 e0       	ldi	r24, 0x01	; 1
 1f2:	23 d0       	rcall	.+70     	; 0x23a <lcd_cmd>
	lcd_cmd(0x0e);
 1f4:	8e e0       	ldi	r24, 0x0E	; 14
 1f6:	21 d0       	rcall	.+66     	; 0x23a <lcd_cmd>
	delay(10);
 1f8:	8a e0       	ldi	r24, 0x0A	; 10
 1fa:	90 e0       	ldi	r25, 0x00	; 0
 1fc:	a6 d0       	rcall	.+332    	; 0x34a <delay>
	
}
 1fe:	cf 91       	pop	r28
 200:	df 91       	pop	r29
 202:	08 95       	ret

00000204 <lcd_string>:

void lcd_string(char *str)
{
 204:	df 93       	push	r29
 206:	cf 93       	push	r28
 208:	00 d0       	rcall	.+0      	; 0x20a <lcd_string+0x6>
 20a:	cd b7       	in	r28, 0x3d	; 61
 20c:	de b7       	in	r29, 0x3e	; 62
 20e:	9a 83       	std	Y+2, r25	; 0x02
 210:	89 83       	std	Y+1, r24	; 0x01
 212:	09 c0       	rjmp	.+18     	; 0x226 <lcd_string+0x22>
	while(*str)
	{
		lcd_data(*str);
 214:	e9 81       	ldd	r30, Y+1	; 0x01
 216:	fa 81       	ldd	r31, Y+2	; 0x02
 218:	80 81       	ld	r24, Z
 21a:	53 d0       	rcall	.+166    	; 0x2c2 <lcd_data>
		str++;
 21c:	89 81       	ldd	r24, Y+1	; 0x01
 21e:	9a 81       	ldd	r25, Y+2	; 0x02
 220:	01 96       	adiw	r24, 0x01	; 1
 222:	9a 83       	std	Y+2, r25	; 0x02
 224:	89 83       	std	Y+1, r24	; 0x01
	
}

void lcd_string(char *str)
{
	while(*str)
 226:	e9 81       	ldd	r30, Y+1	; 0x01
 228:	fa 81       	ldd	r31, Y+2	; 0x02
 22a:	80 81       	ld	r24, Z
 22c:	88 23       	and	r24, r24
 22e:	91 f7       	brne	.-28     	; 0x214 <lcd_string+0x10>
	{
		lcd_data(*str);
		str++;
	}
}
 230:	0f 90       	pop	r0
 232:	0f 90       	pop	r0
 234:	cf 91       	pop	r28
 236:	df 91       	pop	r29
 238:	08 95       	ret

0000023a <lcd_cmd>:
void lcd_cmd(unsigned char data)
{
 23a:	df 93       	push	r29
 23c:	cf 93       	push	r28
 23e:	0f 92       	push	r0
 240:	cd b7       	in	r28, 0x3d	; 61
 242:	de b7       	in	r29, 0x3e	; 62
 244:	89 83       	std	Y+1, r24	; 0x01
	PORTD=(data&0xf0);
 246:	e2 e3       	ldi	r30, 0x32	; 50
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	89 81       	ldd	r24, Y+1	; 0x01
 24c:	80 7f       	andi	r24, 0xF0	; 240
 24e:	80 83       	st	Z, r24
	PORTB&=~(1<<PB5);
 250:	a8 e3       	ldi	r26, 0x38	; 56
 252:	b0 e0       	ldi	r27, 0x00	; 0
 254:	e8 e3       	ldi	r30, 0x38	; 56
 256:	f0 e0       	ldi	r31, 0x00	; 0
 258:	80 81       	ld	r24, Z
 25a:	8f 7d       	andi	r24, 0xDF	; 223
 25c:	8c 93       	st	X, r24
	PORTB|=(1<<PB4);
 25e:	a8 e3       	ldi	r26, 0x38	; 56
 260:	b0 e0       	ldi	r27, 0x00	; 0
 262:	e8 e3       	ldi	r30, 0x38	; 56
 264:	f0 e0       	ldi	r31, 0x00	; 0
 266:	80 81       	ld	r24, Z
 268:	80 61       	ori	r24, 0x10	; 16
 26a:	8c 93       	st	X, r24
	delay(1);
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	6c d0       	rcall	.+216    	; 0x34a <delay>
	PORTB&=~(1<<PB4);
 272:	a8 e3       	ldi	r26, 0x38	; 56
 274:	b0 e0       	ldi	r27, 0x00	; 0
 276:	e8 e3       	ldi	r30, 0x38	; 56
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	80 81       	ld	r24, Z
 27c:	8f 7e       	andi	r24, 0xEF	; 239
 27e:	8c 93       	st	X, r24
	delay(2);
 280:	82 e0       	ldi	r24, 0x02	; 2
 282:	90 e0       	ldi	r25, 0x00	; 0
 284:	62 d0       	rcall	.+196    	; 0x34a <delay>
	PORTD=(data<<4);
 286:	e2 e3       	ldi	r30, 0x32	; 50
 288:	f0 e0       	ldi	r31, 0x00	; 0
 28a:	89 81       	ldd	r24, Y+1	; 0x01
 28c:	82 95       	swap	r24
 28e:	80 7f       	andi	r24, 0xF0	; 240
 290:	80 83       	st	Z, r24
	PORTB|=(1<<PB4);
 292:	a8 e3       	ldi	r26, 0x38	; 56
 294:	b0 e0       	ldi	r27, 0x00	; 0
 296:	e8 e3       	ldi	r30, 0x38	; 56
 298:	f0 e0       	ldi	r31, 0x00	; 0
 29a:	80 81       	ld	r24, Z
 29c:	80 61       	ori	r24, 0x10	; 16
 29e:	8c 93       	st	X, r24
	delay(1);
 2a0:	81 e0       	ldi	r24, 0x01	; 1
 2a2:	90 e0       	ldi	r25, 0x00	; 0
 2a4:	52 d0       	rcall	.+164    	; 0x34a <delay>
	PORTB&=~(1<<PB4);
 2a6:	a8 e3       	ldi	r26, 0x38	; 56
 2a8:	b0 e0       	ldi	r27, 0x00	; 0
 2aa:	e8 e3       	ldi	r30, 0x38	; 56
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	80 81       	ld	r24, Z
 2b0:	8f 7e       	andi	r24, 0xEF	; 239
 2b2:	8c 93       	st	X, r24
	delay(2);	
 2b4:	82 e0       	ldi	r24, 0x02	; 2
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	48 d0       	rcall	.+144    	; 0x34a <delay>
}
 2ba:	0f 90       	pop	r0
 2bc:	cf 91       	pop	r28
 2be:	df 91       	pop	r29
 2c0:	08 95       	ret

000002c2 <lcd_data>:

void lcd_data(unsigned char data)
{
 2c2:	df 93       	push	r29
 2c4:	cf 93       	push	r28
 2c6:	0f 92       	push	r0
 2c8:	cd b7       	in	r28, 0x3d	; 61
 2ca:	de b7       	in	r29, 0x3e	; 62
 2cc:	89 83       	std	Y+1, r24	; 0x01
	PORTD=(data&0xf0);
 2ce:	e2 e3       	ldi	r30, 0x32	; 50
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	89 81       	ldd	r24, Y+1	; 0x01
 2d4:	80 7f       	andi	r24, 0xF0	; 240
 2d6:	80 83       	st	Z, r24
	PORTB|=(1<<PB5);
 2d8:	a8 e3       	ldi	r26, 0x38	; 56
 2da:	b0 e0       	ldi	r27, 0x00	; 0
 2dc:	e8 e3       	ldi	r30, 0x38	; 56
 2de:	f0 e0       	ldi	r31, 0x00	; 0
 2e0:	80 81       	ld	r24, Z
 2e2:	80 62       	ori	r24, 0x20	; 32
 2e4:	8c 93       	st	X, r24
	PORTB|=(1<<PB4);
 2e6:	a8 e3       	ldi	r26, 0x38	; 56
 2e8:	b0 e0       	ldi	r27, 0x00	; 0
 2ea:	e8 e3       	ldi	r30, 0x38	; 56
 2ec:	f0 e0       	ldi	r31, 0x00	; 0
 2ee:	80 81       	ld	r24, Z
 2f0:	80 61       	ori	r24, 0x10	; 16
 2f2:	8c 93       	st	X, r24
	delay(1);
 2f4:	81 e0       	ldi	r24, 0x01	; 1
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	28 d0       	rcall	.+80     	; 0x34a <delay>
	PORTB&=~(1<<PB4);
 2fa:	a8 e3       	ldi	r26, 0x38	; 56
 2fc:	b0 e0       	ldi	r27, 0x00	; 0
 2fe:	e8 e3       	ldi	r30, 0x38	; 56
 300:	f0 e0       	ldi	r31, 0x00	; 0
 302:	80 81       	ld	r24, Z
 304:	8f 7e       	andi	r24, 0xEF	; 239
 306:	8c 93       	st	X, r24
	delay(2);
 308:	82 e0       	ldi	r24, 0x02	; 2
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	1e d0       	rcall	.+60     	; 0x34a <delay>
	PORTD=(data<<4);
 30e:	e2 e3       	ldi	r30, 0x32	; 50
 310:	f0 e0       	ldi	r31, 0x00	; 0
 312:	89 81       	ldd	r24, Y+1	; 0x01
 314:	82 95       	swap	r24
 316:	80 7f       	andi	r24, 0xF0	; 240
 318:	80 83       	st	Z, r24
	PORTB|=(1<<PB4);
 31a:	a8 e3       	ldi	r26, 0x38	; 56
 31c:	b0 e0       	ldi	r27, 0x00	; 0
 31e:	e8 e3       	ldi	r30, 0x38	; 56
 320:	f0 e0       	ldi	r31, 0x00	; 0
 322:	80 81       	ld	r24, Z
 324:	80 61       	ori	r24, 0x10	; 16
 326:	8c 93       	st	X, r24
	delay(1);
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	0e d0       	rcall	.+28     	; 0x34a <delay>
	PORTB&=~(1<<PB4);
 32e:	a8 e3       	ldi	r26, 0x38	; 56
 330:	b0 e0       	ldi	r27, 0x00	; 0
 332:	e8 e3       	ldi	r30, 0x38	; 56
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	80 81       	ld	r24, Z
 338:	8f 7e       	andi	r24, 0xEF	; 239
 33a:	8c 93       	st	X, r24
	delay(2);	
 33c:	82 e0       	ldi	r24, 0x02	; 2
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	04 d0       	rcall	.+8      	; 0x34a <delay>
}
 342:	0f 90       	pop	r0
 344:	cf 91       	pop	r28
 346:	df 91       	pop	r29
 348:	08 95       	ret

0000034a <delay>:

void delay(unsigned int cnt)
{
 34a:	df 93       	push	r29
 34c:	cf 93       	push	r28
 34e:	00 d0       	rcall	.+0      	; 0x350 <delay+0x6>
 350:	00 d0       	rcall	.+0      	; 0x352 <delay+0x8>
 352:	cd b7       	in	r28, 0x3d	; 61
 354:	de b7       	in	r29, 0x3e	; 62
 356:	9c 83       	std	Y+4, r25	; 0x04
 358:	8b 83       	std	Y+3, r24	; 0x03
	int i;
	for(i=0;i<cnt;i++)
 35a:	1a 82       	std	Y+2, r1	; 0x02
 35c:	19 82       	std	Y+1, r1	; 0x01
 35e:	20 c0       	rjmp	.+64     	; 0x3a0 <delay+0x56>
	{  n=1;
 360:	81 e0       	ldi	r24, 0x01	; 1
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	90 93 65 00 	sts	0x0065, r25
 368:	80 93 64 00 	sts	0x0064, r24
		TCNT1H=0XFF;
 36c:	ed e4       	ldi	r30, 0x4D	; 77
 36e:	f0 e0       	ldi	r31, 0x00	; 0
 370:	8f ef       	ldi	r24, 0xFF	; 255
 372:	80 83       	st	Z, r24
		TCNT1L=0X84;
 374:	ec e4       	ldi	r30, 0x4C	; 76
 376:	f0 e0       	ldi	r31, 0x00	; 0
 378:	84 e8       	ldi	r24, 0x84	; 132
 37a:	80 83       	st	Z, r24
		TCCR1B|=(1<<CS10)|(1<<CS11);
 37c:	ae e4       	ldi	r26, 0x4E	; 78
 37e:	b0 e0       	ldi	r27, 0x00	; 0
 380:	ee e4       	ldi	r30, 0x4E	; 78
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	80 81       	ld	r24, Z
 386:	83 60       	ori	r24, 0x03	; 3
 388:	8c 93       	st	X, r24
		while(n);
 38a:	80 91 64 00 	lds	r24, 0x0064
 38e:	90 91 65 00 	lds	r25, 0x0065
 392:	00 97       	sbiw	r24, 0x00	; 0
 394:	d1 f7       	brne	.-12     	; 0x38a <delay+0x40>
}

void delay(unsigned int cnt)
{
	int i;
	for(i=0;i<cnt;i++)
 396:	89 81       	ldd	r24, Y+1	; 0x01
 398:	9a 81       	ldd	r25, Y+2	; 0x02
 39a:	01 96       	adiw	r24, 0x01	; 1
 39c:	9a 83       	std	Y+2, r25	; 0x02
 39e:	89 83       	std	Y+1, r24	; 0x01
 3a0:	29 81       	ldd	r18, Y+1	; 0x01
 3a2:	3a 81       	ldd	r19, Y+2	; 0x02
 3a4:	8b 81       	ldd	r24, Y+3	; 0x03
 3a6:	9c 81       	ldd	r25, Y+4	; 0x04
 3a8:	28 17       	cp	r18, r24
 3aa:	39 07       	cpc	r19, r25
 3ac:	c8 f2       	brcs	.-78     	; 0x360 <delay+0x16>
		TCNT1H=0XFF;
		TCNT1L=0X84;
		TCCR1B|=(1<<CS10)|(1<<CS11);
		while(n);
	}
}
 3ae:	0f 90       	pop	r0
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
 3b4:	0f 90       	pop	r0
 3b6:	cf 91       	pop	r28
 3b8:	df 91       	pop	r29
 3ba:	08 95       	ret

000003bc <__divmodhi4>:
 3bc:	97 fb       	bst	r25, 7
 3be:	09 2e       	mov	r0, r25
 3c0:	07 26       	eor	r0, r23
 3c2:	0a d0       	rcall	.+20     	; 0x3d8 <__divmodhi4_neg1>
 3c4:	77 fd       	sbrc	r23, 7
 3c6:	04 d0       	rcall	.+8      	; 0x3d0 <__divmodhi4_neg2>
 3c8:	0c d0       	rcall	.+24     	; 0x3e2 <__udivmodhi4>
 3ca:	06 d0       	rcall	.+12     	; 0x3d8 <__divmodhi4_neg1>
 3cc:	00 20       	and	r0, r0
 3ce:	1a f4       	brpl	.+6      	; 0x3d6 <__divmodhi4_exit>

000003d0 <__divmodhi4_neg2>:
 3d0:	70 95       	com	r23
 3d2:	61 95       	neg	r22
 3d4:	7f 4f       	sbci	r23, 0xFF	; 255

000003d6 <__divmodhi4_exit>:
 3d6:	08 95       	ret

000003d8 <__divmodhi4_neg1>:
 3d8:	f6 f7       	brtc	.-4      	; 0x3d6 <__divmodhi4_exit>
 3da:	90 95       	com	r25
 3dc:	81 95       	neg	r24
 3de:	9f 4f       	sbci	r25, 0xFF	; 255
 3e0:	08 95       	ret

000003e2 <__udivmodhi4>:
 3e2:	aa 1b       	sub	r26, r26
 3e4:	bb 1b       	sub	r27, r27
 3e6:	51 e1       	ldi	r21, 0x11	; 17
 3e8:	07 c0       	rjmp	.+14     	; 0x3f8 <__udivmodhi4_ep>

000003ea <__udivmodhi4_loop>:
 3ea:	aa 1f       	adc	r26, r26
 3ec:	bb 1f       	adc	r27, r27
 3ee:	a6 17       	cp	r26, r22
 3f0:	b7 07       	cpc	r27, r23
 3f2:	10 f0       	brcs	.+4      	; 0x3f8 <__udivmodhi4_ep>
 3f4:	a6 1b       	sub	r26, r22
 3f6:	b7 0b       	sbc	r27, r23

000003f8 <__udivmodhi4_ep>:
 3f8:	88 1f       	adc	r24, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	5a 95       	dec	r21
 3fe:	a9 f7       	brne	.-22     	; 0x3ea <__udivmodhi4_loop>
 400:	80 95       	com	r24
 402:	90 95       	com	r25
 404:	bc 01       	movw	r22, r24
 406:	cd 01       	movw	r24, r26
 408:	08 95       	ret

0000040a <_exit>:
 40a:	f8 94       	cli

0000040c <__stop_program>:
 40c:	ff cf       	rjmp	.-2      	; 0x40c <__stop_program>
